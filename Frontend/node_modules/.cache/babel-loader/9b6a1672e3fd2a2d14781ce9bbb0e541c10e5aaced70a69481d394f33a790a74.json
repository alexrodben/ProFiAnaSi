{"ast":null,"code":"import axios from 'axios';\nimport { URL } from \"../../config\";\n\n// GET\nexport async function searchComprasData() {\n  if (!localStorage[\"compras\"]) {\n    try {\n      const response = await axios.get(URL + \"compras\", {\n        headers: {\n          Authorization: localStorage[\"token\"]\n        }\n      });\n      localStorage[\"compras\"] = JSON.stringify(response.data);\n      return response.data;\n    } catch (error) {\n      if (error.response && error.response.status === 403) {\n        console.error('Acceso denegado. Redireccionando a /login...');\n        localStorage.clear();\n        window.location.href = '/login';\n      } else {\n        console.error('Error al obtener las compras:', error);\n      }\n    }\n    return [];\n  }\n  let compras = JSON.parse(localStorage[\"compras\"]);\n  return compras;\n}\n\n// DELETE\nexport async function removeCompraData(remove) {\n  try {\n    await axios.delete(URL + \"compras/\" + remove, {\n      headers: {\n        Authorization: localStorage[\"token\"]\n      }\n    });\n    let compras = await searchComprasData();\n    compras = compras.filter(compra => compra.Id_Compra !== remove);\n    localStorage[\"compras\"] = JSON.stringify(compras);\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar la compra:', error);\n    return false;\n  }\n}\n\n// PUT\nexport async function editCompraData(edit) {\n  try {\n    await axios.put(URL + \"compras/\" + edit.Id_Compra, edit, {\n      headers: {\n        Authorization: localStorage[\"token\"]\n      }\n    });\n    let compras = await searchComprasData();\n    compras = compras.map(compra => {\n      if (compra.Id_Compra === edit.Id_Compra) {\n        return edit;\n      }\n      return compra;\n    });\n    localStorage[\"compras\"] = JSON.stringify(compras);\n    return true;\n  } catch (error) {\n    console.error('Error al editar la compra:', error);\n    return false;\n  }\n}\n\n// POST\nexport async function saveCompraData(compra) {\n  try {\n    await axios.post(URL + \"compras\", compra, {\n      headers: {\n        Authorization: localStorage[\"token\"]\n      }\n    });\n    let compras = await searchComprasData();\n    compras.push(compra);\n    localStorage[\"compras\"] = JSON.stringify(compras);\n    return true;\n  } catch (error) {\n    console.error('Error al guardar la compra:', error);\n    return false;\n  }\n}","map":{"version":3,"names":["axios","URL","searchComprasData","localStorage","response","get","headers","Authorization","JSON","stringify","data","error","status","console","clear","window","location","href","compras","parse","removeCompraData","remove","delete","filter","compra","Id_Compra","editCompraData","edit","put","map","saveCompraData","post","push"],"sources":["D:/alexr/Documents/UMG/ANALISIS DE SISTEMAS I/proyectoFinalAnalisis/Frontend/src/pages/compras/ComprasApi.tsx"],"sourcesContent":["import axios from 'axios';\r\nimport { comprasFormat } from './ComprasFormat';\r\nimport { URL } from \"../../config\";\r\n\r\n// GET\r\nexport async function searchComprasData(): Promise<comprasFormat[]> {\r\n  if (!localStorage[\"compras\"]) {\r\n    try {\r\n      const response = await axios.get(URL + \"compras\", {\r\n        headers: {\r\n          Authorization: localStorage[\"token\"]\r\n        }\r\n      });\r\n      localStorage[\"compras\"] = JSON.stringify(response.data);\r\n      return response.data;\r\n    } catch (error: any) {\r\n      if (error.response && error.response.status === 403) {\r\n        console.error('Acceso denegado. Redireccionando a /login...');\r\n        localStorage.clear();\r\n        window.location.href = '/login';\r\n      } else {\r\n        console.error('Error al obtener las compras:', error);\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n  let compras: comprasFormat[] = JSON.parse(localStorage[\"compras\"]);\r\n  return compras;\r\n}\r\n\r\n// DELETE\r\nexport async function removeCompraData(remove: string): Promise<boolean> {\r\n  try {\r\n    await axios.delete(URL + \"compras/\" + remove, {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    });\r\n    let compras: comprasFormat[] = await searchComprasData();\r\n    compras = compras.filter((compra: comprasFormat) => compra.Id_Compra !== remove);\r\n    localStorage[\"compras\"] = JSON.stringify(compras);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al eliminar la compra:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// PUT\r\nexport async function editCompraData(edit: comprasFormat): Promise<boolean> {\r\n  try {\r\n    await axios.put(URL + \"compras/\" + edit.Id_Compra, edit, {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    });\r\n    let compras: comprasFormat[] = await searchComprasData();\r\n    compras = compras.map((compra: comprasFormat) => {\r\n      if (compra.Id_Compra === edit.Id_Compra) {\r\n        return edit;\r\n      }\r\n      return compra;\r\n    });\r\n    localStorage[\"compras\"] = JSON.stringify(compras);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al editar la compra:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// POST\r\nexport async function saveCompraData(compra: comprasFormat): Promise<boolean> {\r\n  try {\r\n    await axios.post(URL + \"compras\", compra, {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    });\r\n    let compras: comprasFormat[] = await searchComprasData();\r\n    compras.push(compra);\r\n    localStorage[\"compras\"] = JSON.stringify(compras);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al guardar la compra:', error);\r\n    return false;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}