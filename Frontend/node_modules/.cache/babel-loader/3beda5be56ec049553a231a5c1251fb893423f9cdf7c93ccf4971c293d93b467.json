{"ast":null,"code":"import axios from 'axios';\nimport { URL } from \"../../config\";\n\n// GET\nexport async function searchVentasData() {\n  if (!localStorage[\"ventas\"]) {\n    try {\n      const response = await axios.get(URL + \"ventas\", {\n        headers: {\n          Authorization: localStorage[\"token\"]\n        }\n      });\n      localStorage[\"ventas\"] = JSON.stringify(response.data);\n      return response.data;\n    } catch (error) {\n      if (error.response && error.response.status === 403) {\n        console.error('Acceso denegado. Redireccionando a /login...');\n        localStorage.clear();\n        window.location.href = '/login';\n      } else {\n        console.error('Error al obtener las ventas:', error);\n      }\n    }\n    return [];\n  }\n  let ventas = JSON.parse(localStorage[\"ventas\"]);\n  return ventas;\n}\n\n// DELETE\nexport async function removeVentaData(remove) {\n  try {\n    await axios.delete(URL + \"ventas/\" + remove, {\n      headers: {\n        Authorization: localStorage[\"token\"]\n      }\n    });\n    let ventas = await searchVentasData();\n    ventas = ventas.filter(venta => venta.Id_Venta !== remove);\n    localStorage[\"ventas\"] = JSON.stringify(ventas);\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar la venta:', error);\n    return false;\n  }\n}\n\n// PUT\nexport async function editVentaData(edit) {\n  try {\n    await axios.put(URL + \"ventas/\" + edit.Id_Venta, edit, {\n      headers: {\n        Authorization: localStorage[\"token\"]\n      }\n    });\n    let ventas = await searchVentasData();\n    ventas = ventas.map(venta => {\n      if (venta.Id_Venta === edit.Id_Venta) {\n        return edit;\n      }\n      return venta;\n    });\n    localStorage[\"ventas\"] = JSON.stringify(ventas);\n    return true;\n  } catch (error) {\n    console.error('Error al editar la venta:', error);\n    return false;\n  }\n}\n\n// POST\nexport async function saveVentaData(venta) {\n  try {\n    await axios.post(URL + \"ventas\", venta, {\n      headers: {\n        Authorization: localStorage[\"token\"]\n      }\n    });\n    let ventas = await searchVentasData();\n    ventas.push(venta);\n    localStorage[\"ventas\"] = JSON.stringify(ventas);\n    return true;\n  } catch (error) {\n    console.error('Error al guardar la venta:', error);\n    return false;\n  }\n}","map":{"version":3,"names":["axios","URL","searchVentasData","localStorage","response","get","headers","Authorization","JSON","stringify","data","error","status","console","clear","window","location","href","ventas","parse","removeVentaData","remove","delete","filter","venta","Id_Venta","editVentaData","edit","put","map","saveVentaData","post","push"],"sources":["D:/alexr/Documents/UMG/ANALISIS DE SISTEMAS I/proyectoFinalAnalisis/Frontend/src/pages/ventas/VentasApi.tsx"],"sourcesContent":["import axios from 'axios';\r\nimport { ventasFormat } from './VentasFormat';\r\nimport { URL } from \"../../config\";\r\n\r\n// GET\r\nexport async function searchVentasData(): Promise<ventasFormat[]> {\r\n  if (!localStorage[\"ventas\"]) {\r\n    try {\r\n      const response = await axios.get(URL + \"ventas\", {\r\n        headers: {\r\n          Authorization: localStorage[\"token\"]\r\n        }\r\n      });\r\n      localStorage[\"ventas\"] = JSON.stringify(response.data);\r\n      return response.data;\r\n    } catch (error: any) {\r\n      if (error.response && error.response.status === 403) {\r\n        console.error('Acceso denegado. Redireccionando a /login...');\r\n        localStorage.clear();\r\n        window.location.href = '/login';\r\n      } else {\r\n        console.error('Error al obtener las ventas:', error);\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n  let ventas: ventasFormat[] = JSON.parse(localStorage[\"ventas\"]);\r\n  return ventas;\r\n}\r\n\r\n// DELETE\r\nexport async function removeVentaData(remove: string): Promise<boolean> {\r\n  try {\r\n    await axios.delete(URL + \"ventas/\" + remove, {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    });\r\n    let ventas: ventasFormat[] = await searchVentasData();\r\n    ventas = ventas.filter((venta: ventasFormat) => venta.Id_Venta !== remove);\r\n    localStorage[\"ventas\"] = JSON.stringify(ventas);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al eliminar la venta:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// PUT\r\nexport async function editVentaData(edit: ventasFormat): Promise<boolean> {\r\n  try {\r\n    await axios.put(URL + \"ventas/\" + edit.Id_Venta, edit, {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    });\r\n    let ventas: ventasFormat[] = await searchVentasData();\r\n    ventas = ventas.map((venta: ventasFormat) => {\r\n      if (venta.Id_Venta === edit.Id_Venta) {\r\n        return edit;\r\n      }\r\n      return venta;\r\n    });\r\n    localStorage[\"ventas\"] = JSON.stringify(ventas);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al editar la venta:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// POST\r\nexport async function saveVentaData(venta: ventasFormat): Promise<boolean> {\r\n  try {\r\n    await axios.post(URL + \"ventas\", venta, {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    });\r\n    let ventas: ventasFormat[] = await searchVentasData();\r\n    ventas.push(venta);\r\n    localStorage[\"ventas\"] = JSON.stringify(ventas);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al guardar la venta:', error);\r\n    return false;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}