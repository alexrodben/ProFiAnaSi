{"ast":null,"code":"import axios from 'axios';\nimport { URL } from \"./../../config\";\n\n//GET\nexport function searchCustomerData() {\n  if (!localStorage[\"customers\"]) {\n    axios.get(URL + \"clientes\", {\n      headers: {\n        Authorization: localStorage[\"token\"]\n      }\n    }).then(response => {\n      localStorage[\"customers\"] = JSON.stringify(response.data);\n    }).catch(error => {\n      if (error.response && error.response.status === 403) {\n        console.error('Acceso denegado. Redireccionando a /login...');\n        localStorage.clear();\n        window.location.href = '/login';\n      } else {\n        console.error('Error al obtener los clientes:', error);\n      }\n    });\n    return [];\n  }\n  let customers = JSON.parse(localStorage[\"customers\"]);\n  return customers;\n}\n\n//DELETE\nexport async function removeCustomerData(remove) {\n  try {\n    await axios.delete(URL + \"clientes\", {\n      headers: {\n        Authorization: localStorage[\"token\"]\n      }\n    });\n    let customers = searchCustomerData();\n    customers = customers.filter(customer => customer.Id_Cliente !== remove);\n    localStorage[\"customers\"] = JSON.stringify(customers);\n  } catch (error) {\n    console.error('Error al eliminar el cliente:', error);\n    throw error;\n  }\n}\n\n//PUT\nexport async function editCustomerData(edit) {\n  try {\n    await axios.put(URL + \"clientes\", edit, {\n      headers: {\n        Authorization: localStorage[\"token\"]\n      }\n    });\n    let customers = searchCustomerData();\n    customers = customers.map(customer => {\n      if (customer.Id_Cliente === edit.Id_Cliente) {\n        return edit;\n      }\n      return customer;\n    });\n    localStorage[\"customers\"] = JSON.stringify(customers);\n  } catch (error) {\n    console.error('Error al editar el cliente:', error);\n    throw error;\n  }\n}\n\n//POST\nexport async function saveCustomerData(customer) {\n  try {\n    await axios.post(URL + \"clientes\", customer, {\n      headers: {\n        Authorization: localStorage[\"token\"]\n      }\n    });\n    let customers = searchCustomerData();\n    customers.push(customer);\n    localStorage[\"customers\"] = JSON.stringify(customers);\n    return true;\n  } catch (error) {\n    console.error('Error al guardar el cliente:', error);\n    return false;\n  }\n}","map":{"version":3,"names":["axios","URL","searchCustomerData","localStorage","get","headers","Authorization","then","response","JSON","stringify","data","catch","error","status","console","clear","window","location","href","customers","parse","removeCustomerData","remove","delete","filter","customer","Id_Cliente","editCustomerData","edit","put","map","saveCustomerData","post","push"],"sources":["D:/alexr/Documents/UMG/ANALISIS DE SISTEMAS I/proyectoFinalAnalisis/Frontend/src/pages/customer/CustomerApi.tsx"],"sourcesContent":["import { customerFormat } from \"./CustomerFormat\";\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport { URL } from \"./../../config\";\r\n\r\n//GET\r\nexport function searchCustomerData(): customerFormat[] {\r\n  if (!localStorage[\"customers\"]) {\r\n    axios.get(URL + \"clientes\", {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    })\r\n      .then((response: AxiosResponse) => {\r\n        localStorage[\"customers\"] = JSON.stringify(response.data);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response && error.response.status === 403) {\r\n          console.error('Acceso denegado. Redireccionando a /login...');\r\n          localStorage.clear();\r\n          window.location.href = '/login';\r\n        } else {\r\n          console.error('Error al obtener los clientes:', error);\r\n        }\r\n      });\r\n    return [];\r\n  }\r\n  let customers: customerFormat[] = JSON.parse(localStorage[\"customers\"]);\r\n  return customers;\r\n}\r\n\r\n//DELETE\r\nexport async function removeCustomerData(remove: string): Promise<void> {\r\n  try {\r\n    await axios.delete(URL + \"clientes\", {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    });\r\n    let customers: customerFormat[] = searchCustomerData();\r\n    customers = customers.filter((customer: customerFormat) => customer.Id_Cliente !== remove);\r\n    localStorage[\"customers\"] = JSON.stringify(customers);\r\n  } catch (error) {\r\n    console.error('Error al eliminar el cliente:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n//PUT\r\nexport async function editCustomerData(edit: customerFormat): Promise<void> {\r\n  try {\r\n    await axios.put(URL + \"clientes\", edit, {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    });\r\n    let customers: customerFormat[] = searchCustomerData();\r\n    customers = customers.map((customer: customerFormat) => {\r\n      if (customer.Id_Cliente === edit.Id_Cliente) {\r\n        return edit;\r\n      }\r\n      return customer;\r\n    });\r\n    localStorage[\"customers\"] = JSON.stringify(customers);\r\n  } catch (error) {\r\n    console.error('Error al editar el cliente:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n//POST\r\nexport async function saveCustomerData(customer: customerFormat): Promise<boolean> {\r\n  try {\r\n    await axios.post(URL + \"clientes\", customer, {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    });\r\n    let customers: customerFormat[] = searchCustomerData();\r\n    customers.push(customer);\r\n    localStorage[\"customers\"] = JSON.stringify(customers);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al guardar el cliente:', error);\r\n    return false;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}