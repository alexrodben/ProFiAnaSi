{"ast":null,"code":"import{URL}from\"./../../config\";import axios from'axios';//GET\nexport async function searchCustomerData(){if(!localStorage[\"customers\"]){try{const response=await axios.get(URL+\"clientes\",{headers:{Authorization:localStorage[\"token\"]}});localStorage[\"customers\"]=JSON.stringify(response.data);return response.data;}catch(error){if(error.response&&error.response.status===403){console.error('Acceso denegado. Redireccionando a /login...');localStorage.clear();window.location.href='/login';}else{console.error('Error al obtener los clientes:',error);}return[];}}return JSON.parse(localStorage[\"customers\"]);}//DELETE\nexport async function removeCustomerData(remove){try{await axios.delete(URL+\"clientes\",{headers:{Authorization:localStorage[\"token\"]}});let customers=await searchCustomerData();customers=customers.filter(customer=>customer.Id_Cliente!==remove);localStorage[\"customers\"]=JSON.stringify(customers);return true;}catch(error){console.error('Error al eliminar el cliente:',error);return false;}}//PUT\nexport async function editCustomerData(edit){try{await axios.put(URL+\"clientes\",edit,{headers:{Authorization:localStorage[\"token\"]}});let customers=await searchCustomerData();customers=customers.map(customer=>{if(customer.Id_Cliente===edit.Id_Cliente){return edit;}return customer;});localStorage[\"customers\"]=JSON.stringify(customers);return true;}catch(error){console.error('Error al editar el cliente:',error);return false;}}//POST\nexport async function saveCustomerData(customer){try{await axios.post(URL+\"clientes\",customer,{headers:{Authorization:localStorage[\"token\"]}});let customers=await searchCustomerData();customers.push(customer);localStorage[\"customers\"]=JSON.stringify(customers);return true;}catch(error){console.error('Error al guardar el cliente:',error);return false;}}","map":{"version":3,"names":["URL","axios","searchCustomerData","localStorage","response","get","headers","Authorization","JSON","stringify","data","error","status","console","clear","window","location","href","parse","removeCustomerData","remove","delete","customers","filter","customer","Id_Cliente","editCustomerData","edit","put","map","saveCustomerData","post","push"],"sources":["D:/alexr/Documents/UMG/ANALISIS DE SISTEMAS I/proyectoFinalAnalisis/Frontend/src/pages/customer/CustomerApi.tsx"],"sourcesContent":["import { customerFormat } from \"./CustomerFormat\";\r\nimport { URL } from \"./../../config\";\r\nimport axios from 'axios';\r\n\r\n//GET\r\nexport async function searchCustomerData(): Promise<customerFormat[]> {\r\n  if (!localStorage[\"customers\"]) {\r\n    try {\r\n      const response = await axios.get(URL + \"clientes\", {\r\n        headers: {\r\n          Authorization: localStorage[\"token\"]\r\n        }\r\n      });\r\n      localStorage[\"customers\"] = JSON.stringify(response.data);\r\n      return response.data;\r\n    } catch (error: any) {\r\n      if (error.response && error.response.status === 403) {\r\n        console.error('Acceso denegado. Redireccionando a /login...');\r\n        localStorage.clear();\r\n        window.location.href = '/login';\r\n      } else {\r\n        console.error('Error al obtener los clientes:', error);\r\n      }\r\n      return [];\r\n    }\r\n  }\r\n  return JSON.parse(localStorage[\"customers\"]);\r\n}\r\n\r\n\r\n//DELETE\r\nexport async function removeCustomerData(remove: string): Promise<boolean> {\r\n  try {\r\n    await axios.delete(URL + \"clientes\", {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    });\r\n    let customers: customerFormat[] = await searchCustomerData();\r\n    customers = customers.filter((customer: customerFormat) => customer.Id_Cliente !== remove);\r\n    localStorage[\"customers\"] = JSON.stringify(customers);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al eliminar el cliente:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n//PUT\r\nexport async function editCustomerData(edit: customerFormat): Promise<boolean> {\r\n  try {\r\n    await axios.put(URL + \"clientes\", edit, {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    });\r\n    let customers: customerFormat[] = await searchCustomerData();\r\n    customers = customers.map((customer: customerFormat) => {\r\n      if (customer.Id_Cliente === edit.Id_Cliente) {\r\n        return edit;\r\n      }\r\n      return customer;\r\n    });\r\n    localStorage[\"customers\"] = JSON.stringify(customers);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al editar el cliente:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n//POST\r\nexport async function saveCustomerData(customer: customerFormat): Promise<boolean> {\r\n  try {\r\n    await axios.post(URL + \"clientes\", customer, {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    });\r\n    let customers: customerFormat[] = await searchCustomerData();\r\n    customers.push(customer);\r\n    localStorage[\"customers\"] = JSON.stringify(customers);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al guardar el cliente:', error);\r\n    return false;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}