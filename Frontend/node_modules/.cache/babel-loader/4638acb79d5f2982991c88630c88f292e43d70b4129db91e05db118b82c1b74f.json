{"ast":null,"code":"import { URL } from \"./../../config\";\nimport axios from 'axios';\n\n// GET\nexport async function searchSupplierData() {\n  if (!localStorage[\"suppliers\"]) {\n    try {\n      const response = await axios.get(URL + \"proveedores\", {\n        headers: {\n          Authorization: localStorage[\"token\"]\n        }\n      });\n      localStorage[\"suppliers\"] = JSON.stringify(response.data);\n      return response.data;\n    } catch (error) {\n      if (error.response && error.response.status === 403) {\n        console.error('Acceso denegado. Redireccionando a /login...');\n        localStorage.clear();\n        window.location.href = '/login';\n      } else {\n        console.error('Error al obtener los proveedores:', error);\n      }\n      return [];\n    }\n  }\n  return JSON.parse(localStorage[\"suppliers\"]);\n}\n\n// DELETE\nexport async function removeSupplierData(remove) {\n  try {\n    await axios.delete(URL + \"proveedores\", {\n      headers: {\n        Authorization: localStorage[\"token\"]\n      }\n    });\n    let suppliers = await searchSupplierData();\n    suppliers = suppliers.filter(supplier => supplier.Id_Proveedor !== remove);\n    localStorage[\"suppliers\"] = JSON.stringify(suppliers);\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar el proveedor:', error);\n    return false;\n  }\n}\n\n// PUT\nexport async function editSupplierData(edit) {\n  try {\n    await axios.put(URL + \"proveedores\", edit, {\n      headers: {\n        Authorization: localStorage[\"token\"]\n      }\n    });\n    let suppliers = await searchSupplierData();\n    suppliers = suppliers.map(supplier => {\n      if (supplier.Id_Proveedor === edit.Id_Proveedor) {\n        return edit;\n      }\n      return supplier;\n    });\n    localStorage[\"suppliers\"] = JSON.stringify(suppliers);\n    return true;\n  } catch (error) {\n    console.error('Error al editar el proveedor:', error);\n    return false;\n  }\n}\n\n// POST\nexport async function saveSupplierData(supplier) {\n  try {\n    await axios.post(URL + \"proveedores\", supplier, {\n      headers: {\n        Authorization: localStorage[\"token\"]\n      }\n    });\n    let suppliers = await searchSupplierData();\n    suppliers.push(supplier);\n    localStorage[\"suppliers\"] = JSON.stringify(suppliers);\n    return true;\n  } catch (error) {\n    console.error('Error al guardar el proveedor:', error);\n    return false;\n  }\n}","map":{"version":3,"names":["URL","axios","searchSupplierData","localStorage","response","get","headers","Authorization","JSON","stringify","data","error","status","console","clear","window","location","href","parse","removeSupplierData","remove","delete","suppliers","filter","supplier","Id_Proveedor","editSupplierData","edit","put","map","saveSupplierData","post","push"],"sources":["D:/alexr/Documents/UMG/ANALISIS DE SISTEMAS I/proyectoFinalAnalisis/Frontend/src/pages/supplier/SupplierApi.tsx"],"sourcesContent":["import { supplierFormat } from \"./SupplierFormat\";\r\nimport { URL } from \"./../../config\";\r\nimport axios from 'axios';\r\n\r\n// GET\r\nexport async function searchSupplierData(): Promise<supplierFormat[]> {\r\n  if (!localStorage[\"suppliers\"]) {\r\n    try {\r\n      const response = await axios.get(URL + \"proveedores\", {\r\n        headers: {\r\n          Authorization: localStorage[\"token\"]\r\n        }\r\n      });\r\n      localStorage[\"suppliers\"] = JSON.stringify(response.data);\r\n      return response.data;\r\n    } catch (error: any) {\r\n      if (error.response && error.response.status === 403) {\r\n        console.error('Acceso denegado. Redireccionando a /login...');\r\n        localStorage.clear();\r\n        window.location.href = '/login';\r\n      } else {\r\n        console.error('Error al obtener los proveedores:', error);\r\n      }\r\n      return [];\r\n    }\r\n  }\r\n  return JSON.parse(localStorage[\"suppliers\"]);\r\n}\r\n\r\n\r\n// DELETE\r\nexport async function removeSupplierData(remove: string): Promise<boolean> {\r\n  try {\r\n    await axios.delete(URL + \"proveedores\", {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    });\r\n    let suppliers: supplierFormat[] = await searchSupplierData();\r\n    suppliers = suppliers.filter((supplier: supplierFormat) => supplier.Id_Proveedor !== remove);\r\n    localStorage[\"suppliers\"] = JSON.stringify(suppliers);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al eliminar el proveedor:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// PUT\r\nexport async function editSupplierData(edit: supplierFormat): Promise<boolean> {\r\n  try {\r\n    await axios.put(URL + \"proveedores\", edit, {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    });\r\n    let suppliers: supplierFormat[] = await searchSupplierData();\r\n    suppliers = suppliers.map((supplier: supplierFormat) => {\r\n      if (supplier.Id_Proveedor === edit.Id_Proveedor) {\r\n        return edit;\r\n      }\r\n      return supplier;\r\n    });\r\n    localStorage[\"suppliers\"] = JSON.stringify(suppliers);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al editar el proveedor:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// POST\r\nexport async function saveSupplierData(supplier: supplierFormat): Promise<boolean> {\r\n  try {\r\n    await axios.post(URL + \"proveedores\", supplier, {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    });\r\n    let suppliers: supplierFormat[] = await searchSupplierData();\r\n    suppliers.push(supplier);\r\n    localStorage[\"suppliers\"] = JSON.stringify(suppliers);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al guardar el proveedor:', error);\r\n    return false;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}