{"ast":null,"code":"import { URL } from \"../../config\";\nimport axios from 'axios';\n\n// GET\nexport async function searchUserData() {\n  if (!localStorage[\"users\"]) {\n    try {\n      const response = await axios.get(URL + \"usuarios\", {\n        headers: {\n          Authorization: localStorage[\"token\"]\n        }\n      });\n      localStorage[\"users\"] = JSON.stringify(response.data);\n    } catch (error) {\n      if (error.response && error.response.status === 403) {\n        console.error('Acceso denegado. Redireccionando a /login...');\n        localStorage.clear();\n        window.location.href = '/login';\n      } else {\n        console.error('Error al obtener los usuarios:', error);\n      }\n    }\n    return [];\n  }\n  return JSON.parse(localStorage[\"users\"]);\n}\n\n// DELETE\nexport async function removeUserData(remove) {\n  try {\n    await axios.delete(URL + \"usuarios\", {\n      headers: {\n        Authorization: localStorage[\"token\"]\n      }\n    });\n    let users = await searchUserData();\n    users = users.filter(user => user.id_usuario !== remove);\n    localStorage[\"users\"] = JSON.stringify(users);\n    return true;\n  } catch (error) {\n    console.error('Error al eliminar el usuario:', error);\n    return false;\n  }\n}\n\n// PUT\nexport async function editUserData(edit) {\n  try {\n    await axios.put(URL + \"usuarios\", edit, {\n      headers: {\n        Authorization: localStorage[\"token\"]\n      }\n    });\n    let users = await searchUserData();\n    users = users.map(user => {\n      if (user.id_usuario === edit.id_usuario) {\n        return edit;\n      }\n      return user;\n    });\n    localStorage[\"users\"] = JSON.stringify(users);\n    return true;\n  } catch (error) {\n    console.error('Error al editar el usuario:', error);\n    return false;\n  }\n}\n\n// POST\nexport async function saveUserData(user) {\n  try {\n    await axios.post(URL + \"usuarios\", user, {\n      headers: {\n        Authorization: localStorage[\"token\"]\n      }\n    });\n    let users = await searchUserData();\n    users.push(user);\n    localStorage[\"users\"] = JSON.stringify(users);\n    return true;\n  } catch (error) {\n    console.error('Error al guardar el usuario:', error);\n    return false;\n  }\n}","map":{"version":3,"names":["URL","axios","searchUserData","localStorage","response","get","headers","Authorization","JSON","stringify","data","error","status","console","clear","window","location","href","parse","removeUserData","remove","delete","users","filter","user","id_usuario","editUserData","edit","put","map","saveUserData","post","push"],"sources":["D:/alexr/Documents/UMG/ANALISIS DE SISTEMAS I/proyectoFinalAnalisis/Frontend/src/pages/users/UserApi.tsx"],"sourcesContent":["import { userFormat } from './UserFormat';\r\nimport { URL } from \"../../config\";\r\nimport axios from 'axios';\r\n\r\n// GET\r\nexport async function searchUserData(): Promise<userFormat[]> {\r\n  if (!localStorage[\"users\"]) {\r\n    try {\r\n      const response = await axios.get(URL + \"usuarios\", {\r\n        headers: {\r\n          Authorization: localStorage[\"token\"]\r\n        }\r\n      });\r\n      localStorage[\"users\"] = JSON.stringify(response.data);\r\n    } catch (error: any) {\r\n      if (error.response && error.response.status === 403) {\r\n        console.error('Acceso denegado. Redireccionando a /login...');\r\n        localStorage.clear();\r\n        window.location.href = '/login';\r\n      } else {\r\n        console.error('Error al obtener los usuarios:', error);\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n  return JSON.parse(localStorage[\"users\"]);\r\n}\r\n\r\n\r\n// DELETE\r\nexport async function removeUserData(remove: string): Promise<boolean> {\r\n  try {\r\n    await axios.delete(URL + \"usuarios\", {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    });\r\n    let users: userFormat[] = await searchUserData();\r\n    users = users.filter((user: userFormat) => user.id_usuario !== remove);\r\n    localStorage[\"users\"] = JSON.stringify(users);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al eliminar el usuario:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// PUT\r\nexport async function editUserData(edit: userFormat): Promise<boolean> {\r\n  try {\r\n    await axios.put(URL + \"usuarios\", edit, {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    });\r\n    let users: userFormat[] = await searchUserData();\r\n    users = users.map((user: userFormat) => {\r\n      if (user.id_usuario === edit.id_usuario) {\r\n        return edit;\r\n      }\r\n      return user;\r\n    });\r\n    localStorage[\"users\"] = JSON.stringify(users);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al editar el usuario:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// POST\r\nexport async function saveUserData(user: userFormat): Promise<boolean> {\r\n  try {\r\n    await axios.post(URL + \"usuarios\", user, {\r\n      headers: {\r\n        Authorization: localStorage[\"token\"]\r\n      }\r\n    });\r\n    let users: userFormat[] = await searchUserData();\r\n    users.push(user);\r\n    localStorage[\"users\"] = JSON.stringify(users);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error al guardar el usuario:', error);\r\n    return false;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}